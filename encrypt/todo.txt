• change encrypt signature to take pure read/write streams and an options object for the rest
• allow user to specify format to save it in (and read it in)
  - // const cipherFileData: Buffer = Buffer.from(await readFile(inFile, 'binary'), 'base64')
  - store somewhere (1 byte) type data storage 
• if exeption occurs write back original file to disk
• catch any errors
  - if file not found
  - encryption error
• investigate why we have to cast write stream
• optionally encrypt directory
  - as a zip
  - or recursively each file in directory (flag)
